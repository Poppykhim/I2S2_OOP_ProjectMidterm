package ui.MenuGroup;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;

import org.w3c.dom.events.MouseEvent;

public class MenuRight extends javax.swing.JPanel {

    private final JPanel productListPanel;

    public MenuRight() {
        initComponents();
        productListPanel = new JPanel();
        productListPanel.setLayout(new BoxLayout(productListPanel, BoxLayout.Y_AXIS));
        productListPanel.setBackground(Color.WHITE);
        ProductCard.setViewportView(productListPanel);

        // header
        JPanel header = new JPanel(new GridBagLayout());
        header.setPreferredSize(new Dimension(0, 20));
        header.setMaximumSize(new Dimension(Integer.MAX_VALUE, 20));
        header.setBackground(Color.WHITE);
        header.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridy = 0;
        gbc.insets = new Insets(0, 0, 0, 5);
        gbc.anchor = GridBagConstraints.WEST;

        gbc.gridx = 0;
        gbc.weightx = 0.02;
        header.add(createHeaderLabel("No"), gbc);

        gbc.gridx = 1;
        gbc.weightx = 1.5;
        header.add(createHeaderLabel("Name"), gbc);

        gbc.gridx = 2;
        gbc.weightx = 0.5;
        header.add(createHeaderLabel("Qty"), gbc);

        gbc.gridx = 3;
        gbc.weightx = 0;
        header.add(createHeaderLabel("Total"), gbc);

        productListPanel.add(header);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ProductCard = new javax.swing.JScrollPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SubTotal = new javax.swing.JLabel();
        Discount = new javax.swing.JLabel();
        GrandTotal = new javax.swing.JLabel();
        CompleteBtn = new javax.swing.JButton();
        SendBtn = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(210, 568));

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel1.setText("Card");

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("order #XXXX");

        ProductCard.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setText("Grand Total");

        jLabel8.setText("Sub Total");

        jLabel9.setText("Discount");

        SubTotal.setText("0.00$");

        Discount.setText("0.00$");

        Discount.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR)); // Make it look clickable

        // Discount.addMouseListener(new MouseAdapter() {
        //     @Override
        //     public void mouseClicked(MouseEvent e) {
        //         DiscountDialog dialog = new DiscountDialog(SwingUtilities.getWindowAncestor(Discount));
        //         dialog.setVisible(true);
        //         if (dialog.isApplied()) {
        //             double value = dialog.getDiscountValue();
        //             boolean isPercent = dialog.isPercent();
        //             if (isPercent) {
        //                 applyDiscountPercent(value);
        //             } else {
        //                 applyDiscountFixed(value);
        //             }
        //             // Optional: update label text to reflect current discount
        //             String discountText = isPercent ? String.format("Discount: %.0f%%", value)
        //                     : String.format("Discount: $%.2f", value);
        //             Discount.setText(discountText);
        //         }
        //     }
        // });
        GrandTotal.setText("0.00$");

        CompleteBtn.setText("Complete");
        CompleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompleteBtnActionPerformed(evt);
            }
        });

        SendBtn.setText("Send");
        SendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ProductCard)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                                .addComponent(jLabel2))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(GrandTotal))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(SubTotal))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Discount))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(SendBtn)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(CompleteBtn)
                                                .addGap(17, 17, 17)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProductCard, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(SubTotal))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(Discount))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(GrandTotal))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(CompleteBtn)
                                        .addComponent(SendBtn))
                                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 23, Short.MAX_VALUE))
        );

    }// </editor-fold>                        

    private void SendBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void CompleteBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        printToPrinter();
    }

    public void addProductItem(String name, int qty, double unitPrice, String ice, String sugar, String remark) {
        String key = name + "|" + ice + "|" + sugar;
        double total;

        if (productMap.containsKey(key)) {
            // Product already in cart: update quantity and total
            ProductItem item = productMap.get(key);
            item.quantity += qty;
            total = item.quantity * unitPrice;
            item.qtyLabel.setText(String.valueOf(item.quantity));
            item.totalLabel.setText(String.format("%.2f$", total));
        } else {
            // Create new entry
            ProductItem item = new ProductItem();
            item.name = name;
            item.ice = ice;
            item.sugar = sugar;
            item.remark = remark;
            item.unitPrice = unitPrice;
            item.quantity = qty;

            total = unitPrice * qty;

            JPanel itemPanel = new JPanel(new BorderLayout());
            itemPanel.setPreferredSize(new Dimension(0, 60));
            itemPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, 60));
            itemPanel.setBackground(Color.WHITE);
            itemPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.LIGHT_GRAY));

            // Line 1: labels with reference
            JPanel line1 = new JPanel(new GridBagLayout());
            line1.setBackground(Color.WHITE);

            GridBagConstraints gbc = new GridBagConstraints();
            gbc.insets = new Insets(0, 5, 0, 5);
            gbc.gridy = 0;
            gbc.anchor = GridBagConstraints.WEST;

            gbc.gridx = 0;
            gbc.weightx = 0.1;
            line1.add(new JLabel(String.valueOf(productListPanel.getComponentCount())), gbc); // No

            gbc.gridx = 1;
            gbc.weightx = 0.5;
            line1.add(new JLabel(name), gbc);

            gbc.gridx = 2;
            gbc.weightx = 0.2;
            item.qtyLabel = new JLabel(String.valueOf(qty));
            line1.add(item.qtyLabel, gbc);

            gbc.gridx = 3;
            gbc.weightx = 0;
            item.totalLabel = new JLabel(String.format("%.2f$", total));
            line1.add(item.totalLabel, gbc);

            // Line 2: Options
            JLabel optionsLabel = new JLabel("Ice: " + ice + " | Sugar: " + sugar);
            optionsLabel.setFont(new Font("SansSerif", Font.ITALIC, 12));
            optionsLabel.setForeground(Color.DARK_GRAY);
            JPanel line2 = new JPanel(new FlowLayout(FlowLayout.LEFT));
            line2.setBackground(Color.WHITE);
            line2.add(optionsLabel);

            itemPanel.add(line1, BorderLayout.NORTH);
            itemPanel.add(line2, BorderLayout.CENTER);

            item.panel = itemPanel;
            productMap.put(key, item);

            productListPanel.add(itemPanel);
        }

        subtotal += unitPrice * qty;
        updateTotals();

        productListPanel.revalidate();
        productListPanel.repaint();
    }

    private double subtotal = 0.0;
    private double discount = 0.0; // You can dynamically change this later

    private void updateTotals() {
        SubTotal.setText(String.format("%.2f$", subtotal));
        Discount.setText(String.format("%.2f$", discount));
        GrandTotal.setText(String.format("%.2f$", subtotal - discount));
    }

    private JLabel createHeaderLabel(String text) {
        JLabel label = new JLabel(text, SwingConstants.CENTER);
        label.setFont(new Font("SansSerif", Font.BOLD, 13));
        return label;
    }
    private final Map<String, ProductItem> productMap = new HashMap<>();

    private static class ProductItem {

        String name, ice, sugar, remark;
        int quantity;
        double unitPrice;
        JPanel panel;
        JLabel qtyLabel;
        JLabel totalLabel;
    }

    public void printToPrinter() {
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        printerJob.setJobName("Receipt Print");

        // Define how to print this panel
        printerJob.setPrintable((graphics, pageFormat, pageIndex) -> {
            if (pageIndex > 0) {
                return java.awt.print.Printable.NO_SUCH_PAGE;
            }

            // Translate to printable area and scale
            java.awt.Graphics2D g2d = (java.awt.Graphics2D) graphics;
            g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());

            double scaleX = pageFormat.getImageableWidth() / this.getWidth();
            double scaleY = pageFormat.getImageableHeight() / this.getHeight();
            double scale = Math.min(scaleX, scaleY);
            g2d.scale(scale, scale);

            this.printAll(g2d); // You can also use print() for cleaner layout
            return java.awt.print.Printable.PAGE_EXISTS;
        });

        // Show print dialog for printer selection
        if (printerJob.printDialog()) {
            try {
                printerJob.print(); // Print to selected printer
            } catch (PrinterException e) {
                e.printStackTrace();
            }
        }
    }

    public void applyDiscountPercent(double percent) {
        discount = subtotal * (percent / 100.0);
        updateTotals();
    }

    public void applyDiscountFixed(double amount) {
        discount = amount;
        updateTotals();
    }

    public void applyDiscount(String type, double value) {
        if (type.equalsIgnoreCase("percent")) {
            applyDiscountPercent(value);
        } else if (type.equalsIgnoreCase("fixed")) {
            applyDiscountFixed(value);
        }
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton CompleteBtn;
    private javax.swing.JLabel Discount;
    private javax.swing.JLabel GrandTotal;
    private javax.swing.JScrollPane ProductCard;
    private javax.swing.JButton SendBtn;
    private javax.swing.JLabel SubTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration                   
}
